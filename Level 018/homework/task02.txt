**პირობითი განცხადებები (Conditional Statements) Python-ში**

პირობითი განცხადებები ერთ-ერთი ყველაზე მნიშვნელოვანი და ძირითადი კონსტრუქციაა პროგრამირების ენებში. მათთან დახმარებით, პროგრამა იღებს გადაწყვეტილებებს და ახორციელებს სხვადასხვა ქმედებებს იმაზე დაყრდნობით, თუ რა პირობებია შესრულებული.

### როგორ მუშაობს პირობითი განცხადებები?

პირობითი განცხადება საშუალებას იძლევა, რომ პროგრამამ გაიგოს, თუ რომელ პირობებში უნდა შესრულდეს კონკრეტული ქმედება.

Python-ში პირობითი განცხადებები ჩვეულებრივად იყენებენ **`if`**, **`elif`** და **`else`**-ს.

1. **`if`** – მისი გამოყენებით ჩვენ ვამოწმებთ პირველი პირობის სიმართლეს. თუ პირობა შესრულებულია (True), მაშინ შესრულდება შესაბამისი კოდი.
2. **`elif`** – ნიშნავს "else if" და გამოიყენება, როცა სხვა პირობის შემოწმებაა საჭირო, თუ წინა პირობა False იყო.
3. **`else`** – გამოიყენება იმ შემთხვევაში, თუ ყველა სხვა პირობა False იყო. ეს გამოხატავს ყველა სხვა შემთხვევას.

### სინტაქსი:
```python
if პირობა:
    # თუ პირობა სიმართლეა, ეს კოდი შესრულდება
elif მეორე_პირობა:
    # თუ პირველი პირობა False იყო და მეორე პირობა სიმართლეა, ეს კოდი შესრულდება
else:
    # თუ არც ერთი პირობა სიმართლე არ არის, ეს კოდი შესრულდება
```

### მაგალითი:

```python
num = int(input("შეიტანეთ რიცხვი: "))

if num > 0:
    print("რიცხვი დადებითია.")
elif num < 0:
    print("რიცხვი უარყოფითია.")
else:
    print("რიცხვი ნულია.")
```

ამ მაგალითში, პროგრამა შემოწმებს `num`-ს მნიშვნელობას:
- თუ `num` დიდი არის 0-ზე, მაშინ დაბეჭდავს "რიცხვი დადებითია".
- თუ `num` ნაკლებია 0-ზე, მაშინ დაბეჭდავს "რიცხვი უარყოფითია".
- თუ რიცხვი არის ზუსტად 0, მაშინ დაბეჭდავს "რიცხვი ნულია".

### როგორ მუშაობს პირობითი განცხადებები?

1. **შეიძლება მხოლოდ ერთი პირობა იყოს სწორი:** 
   - როდესაც `if`-ი გამოდის, პროგრამა შეწყვეტს დანარჩენ პირობების შემოწმებას, რადგან უკვე იცის, რომ პირველი პირობა შესრულდა.
2. **გამოიყენება მხოლოდ კონკრეტულ სიტუაციებში:**
   - `elif` და `else` გამოიყენება მხოლოდ მაშინ, როდესაც `if`-ის შემდეგ სხვა პირობის შემოწმება ან ყველა სხვა შემთხვევის დაფარვაა საჭირო.

### ნახაზი:

ახლა განვიხილოთ, როგორ შეიძლება ვიზუალურად გამოსახო პირობითი განცხადებები:

```
              +--------------------+
              |   პირობის შეფასება  |
              +--------------------+
                      |
            +---------+---------+
            |                   |
         პირობა1?              სხვა პირობა
           /  \
        Yes    No
        /        \
  განხორციელდება  კიდევ ერთი პირობა
        |
     Yes / No
    |        |
მონაცემების გამოხატვა
```

**მონაცემების ვიზუალიზაცია:**

1. **პროგრამა იწყებს პირობის შეფასებით.**
2. თუ პირობა შესრულებულია (Yes), მაშინ შესრულდება შესაბამისი კოდი.
3. თუ პირობა არ შესრულდა (No), მაშინ ხდება მეორე პირობის შეფასება (თუ არსებობს `elif`), და ასე შემდეგ.
4. თუ არც ერთი პირობა არ შესრულდა, მაშინ ხდება `else`-ის შესრულება (თუ არსებობს).

### რეკომენდაცია:

პირობითი განცხადებები საშუალებას აძლევს პროგრამას, რომ "გაკეთოს არჩევანი" და გამოიჩინოს დინამიურობა. ისინი გამოიყენება სხვადასხვა ტიპის გადაწყვეტილებების მიღებისას, მაგალითად, თამაშებში ქმედებების არჩევისას, ფორმულებში რიცხვების შედარებისთვის, შეყვანის ვალიდაციისთვის და სხვა.

---

ეს იყო პირობითი განცხადებების და მათი მუშაობის ახსნა.