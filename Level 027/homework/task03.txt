CSS-ის ცნებები ხშირად გამოიყენება ვებ-გვერდების სტილის დასასმელად, და იმისთვის რომ კარგად გავიგოთ, რა ხდება CSS-ში, მნიშვნელოვანია თითოეული ტერმინის სწორად გაგება. მოდი, თითოეულ ამ ცნებას შევეხოთ და უფრო დეტალურად განვიხილოთ.

### 1. **დეკლარაცია (Declaration)**

**დეკლარაცია** არის CSS-ის პრინციპი, რომელიც განსაზღვრავს სტილს, რომელიც უნდა გამოიყენოს ელემენტმა. ეს არის ზოგადად `property` და მისი შესაბამისი `value`.

**მაგალითი:**

```css
color: red;
```

- `color` არის **property** (ძირითადი თვისება).
- `red` არის **value** (მნიშვნელობა), რომელიც ერგება `color`-ს.

**დეკლარაცია** ყოველთვის შედგება ორი ნაწილისგან:  
1. **Property** (ძირითადი თვისება, რასაც ვცდილობთ გავზომოთ, მაგალითად, ფონი, ზომა, ფერი).
2. **Value** (მნიშვნელობა, რომელიც მიანიჭებს მნიშვნელობას ცალკეულ თვისებას).

---

### 2. **კუთვნილება (Property)**

**კუთვნილება** არის CSS-ის თვისება, რომელსაც ვანიჭებთ ველებსა და ელემენტებს. ეს არის ის, რაც განსაზღვრავს სტილის სხვადასხვა ასპექტებს, როგორიცაა ფერი, ზომა, გარჩევა, ჩარჩო და ასე შემდეგ.

**მაგალითი:**

```css
background-color: blue;
```

- `background-color` არის კუთვნილება, რომელიც განსაზღვრავს ფონდის ფერს.

### 3. **მნიშვნელობა (Value)**

**მნიშვნელობა** არის ის მონაცემები, რომლებიც მიანიჭებენ `property`-ს. მნიშვნელობა შეიძლება იყოს ისეთი რამ, როგორიცაა ფერი (`red`), სიდიდე (`12px`), მარყუჟი (`solid`), ან სხვა კონკრეტული ვადები.

**მაგალითი:**

```css
font-size: 16px;
```

- `font-size` არის კუთვნილება (property).
- `16px` არის **მნიშვნელობა**, რომელიც განსაზღვრავს ტექსტის ზომას.

---

### 4. **CSS rule (CSS-ის წესი)**

**CSS rule** არის წესი, რომელიც შედგება **selector**-ისა და **declaration block**-ისგან. ეს ის სტრუქტურაა, რომელიც განსაზღვრავს როგორ უნდა გამოიყურებოდეს HTML ელემენტები.

**მაგალითი:**

```css
p {
    color: red;
    font-size: 14px;
}
```

- **Selector** (აირჩია): `p` (პარაგრაფი).
- **Declaration block**: `{ color: red; font-size: 14px; }`.

**CSS rule**-ის მთელი კონცეფცია წარმოადგენს მათ საერთო კომბინაციას: რომელ ელემენტებს უნდა დაეთანხმონ ეს სტილები (selector) და რა სტილები უნდა განახორციელონ (declarations).

---

### 5. **Selector (აირჩია)**

**Selector** არის ის ნაწილი CSS-ის შიდა სტრუქტურისა, რომელიც განსაზღვრავს, რომელი HTML ელემენტები უნდა დაემატოს შესაბამისი სტილი. `selector` შეიძლება იყოს HTML ტეგი, კლასები, ID ან სხვა ჩარჩოები, რომლებიც აკონკრეტებენ ელემენტებს, რომლებზეც მოქმედებს სტილი.

**მაგალითი:**

```css
h1 {
    color: green;
}
```

- `h1` არის **selector**, რომელიც აღნიშნავს ყველა `<h1>` ელემენტს ამ დოკუმენტში.

Selector-ები სხვადასხვა სახით შეიძლება იყოს:
- `tag selector` - `<h1>`, `<p>`, `<div>` და სხვა HTML ელემენტები.
- `class selector` - `.class-name` (მაგალითად, `.highlight`).
- `id selector` - `#id-name` (მაგალითად, `#header`).
- `attribute selector` - ელემენტები, რომლებიც კონკრეტულ ატრიბუტს შეიცავს.

---

### 6. **CSS Inheritance (CSS მემკვიდრეობა)**

**CSS მემკვიდრეობა** აღწერს იმ პროცესს, როდესაც შვილი ელემენტი მემკვიდრეობით იღებს მშობელი ელემენტის სტილის გარკვეულ თვისებებს. ყველა CSS თვისება არ მემკვიდრეობს, მაგრამ ზოგიერთი მემკვიდრეობს, მაგალითად, ტექსტის ფერი (`color`), ზომა (`font-size`), ხაზის სიმკვეთრე (`line-height`).

**მაგალითი:**

```css
div {
    color: blue;
}

p {
    font-size: 14px;
}

<p>ეს პარაგრაფი მემკვიდრეობს `div`-ის ფერს.</p>
```

- ამ შემთხვევაში, `p` ელემენტი მიიღებს `div`-ის მიერ განზრახულ `color: blue`-ს, რადგან ეს თვისება მემკვიდრეობს.

---

### 7. **Descendant Selector (წარმომავალ (descendant) selector)**

**Descendant selector** არის selector-ი, რომელიც შერჩევს ყველა ელემენტს, რომელიც არის სხვა ელემენტის შვილი ან შვილიშვილი. ეს selector-ი მუშაობს მაშინ, როცა გინდა, რომ სტილი არა მარტო პირდაპირ შვილი ელემენტებს, არამედ მათ შთამომავალებსაც მიენიჭოს.

**მაგალითი:**

```css
div p {
    color: red;
}
```

- `div p` არის **descendant selector**.
- ეს selector ეხება ყველა `<p>` ელემენტს, რომელიც პირდაპირ ან არაპირდაპირ არის წარმოდგენილი `<div>`-ის შიგნით.

**მახასიათებლები:**
- **Descendant selector** არ სვამს ელემენტებს მხოლოდ პირდაპირ შვილებს, არამედ ყველას, ვინც ექვემდებარება კონკრეტულ კონტეინერს (თუნდაც მათი დისთანციური შთამომავლობით).

### დასკვნა:

- **დეკლარაცია** არის ცალკეული სტილის თვისება (property) და მისი მნიშვნელობა (value).
- **Selector** არის ის, რაც აღწერს, რომელ HTML ელემენტებს უნდა შეეხოს სტილი.
- **CSS rule** არის selector-ი და დეკლარაციის ბლოკი, რომლებიც ერთობლივად განსაზღვრავენ ელემენტების სტილიზაციას.
- **CSS Inheritance** აღწერს მემკვიდრეობით მიღებული სტილის თვისებებს, რომელი ელემენტებსაც გადაეცემა.
- **Descendant selector** სქემაში ამატებს შთამომავლ ელემენტებს და ეხმარება სტილის ნაკრები ფართო შუალედში (შვილი, შვილიშვილი და ა.შ.).

ეს ყველა ტერმინი გამოიყენება CSS-ში, რათა ვებ-გვერდის სტილიზაცია იყოს უფრო მოქნილი და კოორდინირებული.