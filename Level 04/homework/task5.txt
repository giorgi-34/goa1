Python-ში მონაცემები ძირითადად იყოფა შემდეგ ნაწილებად:

1. Primitive (მარტივი) მონაცემთა ტიპები:

int (მთლიანი რიცხვი): იყენება მთელი რიცხვებისთვის. მაგალითი: 5, -10.

float (გაგრძობადი რიცხვი): გამოიყენება ათწილადი რიცხვებისთვის. მაგალითად: 3.14, -0.001.

str (სტრიქონი): გამოიყენება ტექსტისთვის. მაგალითი: "hello", "world".

bool (ლოგიკური ტიპი): გამოიყენება ჭეშმარიტი ან მცდარი მნიშვნელობებისთვის. მაგალითი: True, False.



2. Compound (შემდგარი) მონაცემთა ტიპები:

list (სია): შეიცავს ელემენტების კოლექციას, რომელიც შეიძლება იყოს სხვადასხვა ტიპის. მაგალითი: [1, 2, 3, "text"].

tuple (კრებული): მსგავსია სიასთან, მაგრამ მისი ელემენტები უცვლელია. მაგალითი: (1, 2, "hello").

set (მრავალი): შეიცავს უნიკალურ ელემენტებს. მაგალითი: {1, 2, 3}.

dict (ლექსიკონი): შეიცავს წყვილებს "გასაღები: მნიშვნელობა". მაგალითი: {"name": "John", "age": 25}.



3. Special (განსაკუთრებული) მონაცემები:

NoneType: აღნიშნავს, რომ მონაცემს არ აქვს მნიშვნელობა. მაგალითი: None.

bytes და bytearray: გამოიყენება ბინარული მონაცემების შესანახად.




სად ვიყენებთ:

Primitive ტიპები გამოიყენება მაშინ, როცა გვჭირდება კონკრეტული ტიპის ინფორმაცია, მაგალითად, რიცხვითი გამოთვლები ან ტექსტის დამუშავება.

Compound ტიპები გამოიყენება, როცა გვჭირდება მონაცემთა კოლექციების შექმნა, როგორიცაა სიები, ლექსიკონები ან კრებულები.

Special ტიპები გამოიყენება, როცა საჭიროა მონაცემების ბინარული ფორმატით დამუშავება ან ინფორმაციის არარსებობის აღნიშვნა.